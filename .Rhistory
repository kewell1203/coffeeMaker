str_trim(paste(independents, "^2"), collapse=" * "))
str_trim(paste(independents, "^2"), collapse=" * ")
str_trim(paste(independents, "^2"))
str_trim(paste(paste(independents, "^2")))
str_trim(paste(paste(independents, "^2")),collapse=""))
str_trim(paste(paste(independents, "^2"),collapse=""))
paste(paste(independents,"^2"),collapse="")
paste(independents,"^2",sep="")
paste(paste(independents,"^2",sep=""),collapse=" * ")
s2<-paste(paste(independents,"^2",sep=""),collapse=" * ")
rbind(s1,s2)
strsplit(s1," ")
strsplit(s1," ")[1]
strsplit(s1," ")[[1]]
v1<-strsplit(s1," ")[[1]]
v2<-strsplit(s2," ")[[1]]
v2
rbind(v1,v2)
format<-rbind(v1,v2)
format
expand.grid(as.data.frame(format))
f<-expand.grid(as.data.frame(format))
is.matrix(f)
is.data.frame(f)
as.matrix(f)
f<-rbind(v1,v2)
format<-as.matrix(expand.grid(as.data.frame(f)))
format
format[1,]
as.formula(format[1,])
paste(format[1,],sep="")
paste(as.vector(format[1,]),sep="")
paste(as.vector(format[1,]),collapse=="")
paste(format[1,],collapse="")
dependent<-Suesse
dependent<-"Suesse"
paste(dependent,paste(format[1,],collapse=""),sep="")
paste(dependent,paste(format[1,],collapse=""),sep="~")
cal<-function(x){
formula<-paste(dependent,paste(x,collapse=""),sep="~")
}
apply(format,1,cal)
spply(format,cal)
sapply(format,cal)
expmat<-as.matrix(expand.grid(as.data.frame(f)))
format<-apply(expmat,1,cal)
format
require(caret)
fitControl <- trainControl(method="repeatedcv",number=5,repeats=3,returnResamp="all")
format[1]
is.vector[format]
format[1]
is.vector(format)
train(format[1],method="lm",trControl=fitControl)
train(as.formula(format[1]),method="lm",trControl=fitControl)
train(as.formula(format[1]),data=kaffee,method="lm",trControl=fitControl)
train(as.formula(format[1]),data=na.omit(kaffee),method="lm",trControl=fitControl)
fit<-train(as.formula(format[1]),data=na.omit(kaffee),method="lm",trControl=fitControl)
fit
fit$results
fit$results["Rsquared"]
method="Rsquared"
fit$results[method]
model="lm"
gute="Rsquared"
repeats=5
number=3
criter<-function(x){
f<-as.formula(x)
fitControl <- trainControl(method="repeatedcv",number=number,repeats=repeats,returnResamp="all")
fit<-train(as.formula(f,data=data,method=model,trControl=fitControl)
return fit$results[guete]
}
criter<-function(x){
f<-as.formula(x)
fitControl <- trainControl(method="repeatedcv",number=number,repeats=repeats,returnResamp="all")
fit<-train(f,data=data,method=model,trControl=fitControl)
return fit$results[guete]
}
criter<-function(x){
f<-as.formula(x)
fitControl <- trainControl(method="repeatedcv",number=number,repeats=repeats,returnResamp="all")
fit<-train(f,data=data,method=model,trControl=fitControl)
return (fit$results[guete])
}
criter(format[1])
data
data=kaffee
criter(format[1])
guete
guete="Rsquared"
criter(format[1])
criter(format[1])
criter(format[1])
criter(format[1])
apply(format,1,criter)
as.matrix(format)
format<-as.matrix(format)
format
apply(format,1,criter)
sapply(format,criter)
res<-sapply(format,criter)
ncol(res)
length(res)
is.matrix(res)
is.vector(res)
sort(res)
?sort
res
sort(c(3,2,4,5))
sort(res)
res[1]
res
is.matrix(res)
typeof(res)
is.data.frame(res)
fit$results[guete]
as.numeric(fit$results[guete])
require(caret)
criter<-function(x){
f<-as.formula(x)
fitControl <- trainControl(method="repeatedcv",number=number,repeats=repeats,returnResamp="all")
fit<-train(f,data=data,method=model,trControl=fitControl)
return (as.numeric(fit$results[guete]))
}
res<-sapply(format,criter)
res
typeof(res)
is.matrix(res)
is.vector(res)
sort(res)
print(res)
bestmod <- function(data, dependent, independents, model="lm", guete="Rsquared", number=5, repeats=3,...)
{
s1 <- paste(independents,collapse=" + ")
s2 <- paste(paste(independents,"^2",sep=""),collapse=" * ")
v1<-strsplit(s1," ")[[1]]
v2<-strsplit(s2," ")[[1]]
f<-rbind(v1,v2)
expmat<-as.matrix(expand.grid(as.data.frame(f)))
doForm<-function(x){
formula<-paste(dependent,paste(x,collapse=""),sep="~")
}
format<-as.matrix(apply(expmat,1,doForm))
data = na.omit(data)
require(caret)
criter<-function(x){
f<-as.formula(x)
fitControl <- trainControl(method="repeatedcv",number=number,repeats=repeats,returnResamp="all")
fit<-train(f,data=data,method=model,trControl=fitControl)
return (as.numeric(fit$results[guete]))
}
res<-sapply(format,criter)
sort(res)
}
best(data=kaffee,dependent="Suesse",independents=c["Mahlgrad","Mehlmenge","Nasspressen"])
best(data=kaffee,dependent="Suesse",independents=c("Mahlgrad","Mehlmenge","Nasspressen")
)
bestmod(data=kaffee,dependent="Suesse",independents=c("Mahlgrad","Mehlmenge","Nasspressen")
)
independents=c("Mahlgrad","Mehlmenge","Nasspressen ")
s1 <- paste(independents,collapse=" + ")
s1
v1<-strsplit(s1," ")[[1]]
v1
independents=c("Mahlgrad"," Mehlmenge","Nasspressen ")
s1
v1<-strsplit(s1," ")[[1]]
v1
s1 <- paste(independents,collapse=" + ")
s2 <- paste(paste(independents,"^2",sep=""),collapse=" * ")
v1<-strsplit(s1," ")[[1]]
v2<-strsplit(s2," ")[[1]]
v2
kaffee[,1]
kaffee[,2]
colnames(kaffee)
colnames(kaffee)[4]
colnames(kaffee)[c(4,5,6)]
independents
independents<-c(4,5,6)
independents <- colnames(data)[independents]
independents
independents=12
dependent <- colnames(data)[dependent]
dependent
dependent<-12
dependent <- colnames(data)[dependent]
dependent
bestmod <- function(data, dependent, independents, model="lm", guete="Rsquared", number=5, repeats=3,...)
{
independents <- colnames(data)[independents]
dependent <- colnames(data)[dependent]
s1 <- paste(independents,collapse=" + ")
s2 <- paste(paste(independents,"^2",sep=""),collapse=" * ")
v1<-strsplit(s1," ")[[1]]
v2<-strsplit(s2," ")[[1]]
f<-rbind(v1,v2)
expmat<-as.matrix(expand.grid(as.data.frame(f)))
doForm<-function(x){
formula<-paste(dependent,paste(x,collapse=""),sep="~")
}
format<-as.matrix(apply(expmat,1,doForm))
data = na.omit(data)
require(caret)
guetef<-function(x){
f<-as.formula(x)
fitControl <- trainControl(method="repeatedcv",number=number,repeats=repeats,returnResamp="all")
fit<-train(f,data=data,method=model,trControl=fitControl)
return (as.numeric(fit$results[guete]))
}
res<-sapply(format,guetef)
sort(res)
}
bestmod(data=kaffee,dependent=12,independents=c(4,5,6))
kaffee
colnames(kaffeee)
colnames(kaffee)
bestmod(data=kaffee,dependent=14,independents=c(4,5,7))
warning()
res<-bestmod(data=kaffee,dependent=14,independents=c(4,5,7))
res
length(res)
source('~/Workspace/SHK@FZI/bestmod.R')
colnames(kaffee)
res<-bestmod(data=kaffee,dependent=11,independents=c(4,5))
res
res<-bestmod(data=kaffee,dependent=11,independents=c(4,5,6))
res
bestmod(data=kaffee,dependent=11,independents=c(4,5,6,7))
source('~/Workspace/SHK@FZI/bestmod.R')
bestmod(data=kaffee,dependent=11,independents=c(4,5,6,7))
3^5
4^5
bestmod(data=kaffee,dependent=11,independents=c(4,5,6,7))
lm(Geschmack ~ Mahlgrad * Mehlmenge)
lm(Geschmack ~ Mahlgrad * Mehlmenge, kaffee)
lm(Geschmack ~ Mahlgrad^2 * Mehlmenge, kaffee)
lm(Geschmack ~ Mahlgrad + Mehlmenge, kaffee)
lm(Geschmack ~ (Mahlgrad + Mehlmenge)^2, kaffee)
lm(Geschmack ~ (Mahlgrad + Mehlmenge + Nasspressen)^2, kaffee)
lm(Geschmack ~ Mahlgrad * Mehlmenge * Nasspressen, kaffee)
lm(Geschmack ~ Mahlgrad + I(Mehlmenge^2) + Nasspressen, kaffee)
??subsets
q()
setwd("Workspace/SHK@FZI/KaffeeMachine/")
load("kaffee.RData")
c("a+b+c",4)
source('~/Workspace/SHK@FZI/KaffeeMachine/checkcrossval.R')
source('~/Workspace/SHK@FZI/selectMod.R')
source('~/Workspace/SHK@FZI/selectMod.R')
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
kaffee.main
fm=Suesse~Mahlgrad+Mehlmenge+Nasspressen
data=kaffee.main
fm <- as.formula(fm)
independents <- attr(terms(fm), "term.labels")
dependent <- as.character(attr(terms(fm), "variables")[[2]])
independents
dependent
data[,c(dependent,independents)]
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
debug(selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1)))
debug
debug()
debug(selectMod)
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
data
independents
na.omit(data[,c(dependent,independents)])
debug(selectMod)
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
colnames(data)
independents
source('~/Workspace/SHK@FZI/selectMod.R')
data.frame(data,,c(dependent, independents))
data.frame(data,2,c(dependent, independents))
data.frame(data,1,c(dependent, independents))
source('~/Workspace/SHK@FZI/selectMod.R')
data.frame(data,1,c(dependent, independents))
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
debug(selectMod)
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/KaffeeMachine/print.crossval.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
data
slices = nrow(data)
random = (slices != nrow(data))
random
details = FALSE
slices2 = NULL
fm <- as.formula(fm)
independents <- attr(terms(fm), "term.labels")
dependent <- as.character(attr(terms(fm), "variables")[[2]])
#data<-na.omit(data)
t<-as.matrix(expand.grid(lapply(partGrads,function(x){seq(0,x)})))
t<-t[rowSums(t)>0&rowSums(t)<=grad,]
formset<- function(args ,vec){
res<-NULL
res<-args[vec==1]
if(any(vec>1)){
agt1<-args[vec>1]
ggt1<-vec[vec>1]
pre<-paste("I(",agt1,"^",ggt1,")",sep="")
res<-c(res,pre)
}
if(length(res)==1){
return(res)
}else{
res<-paste(res,collapse=":")
return(res)
}
}
require(rje)
fset<-powerSet(apply(t,1,function(x){formset(independents,x)}))
fset[[1]]<-NULL
forms<-lapply(fset,function(x){paste(dependent,"~",paste(x,collapse="+",sep=""))})
forms<-unlist(forms)
grad=1
partGrads=c(1,1,1)
t<-as.matrix(expand.grid(lapply(partGrads,function(x){seq(0,x)})))
t<-t[rowSums(t)>0&rowSums(t)<=grad,]
formset<- function(args ,vec){
res<-NULL
res<-args[vec==1]
if(any(vec>1)){
agt1<-args[vec>1]
ggt1<-vec[vec>1]
pre<-paste("I(",agt1,"^",ggt1,")",sep="")
res<-c(res,pre)
}
if(length(res)==1){
return(res)
}else{
res<-paste(res,collapse=":")
return(res)
}
}
require(rje)
fset<-powerSet(apply(t,1,function(x){formset(independents,x)}))
fset[[1]]<-NULL
forms<-lapply(fset,function(x){paste(dependent,"~",paste(x,collapse="+",sep=""))})
forms<-unlist(forms)
partGrads=c(1,1,1)
t<-as.matrix(expand.grid(lapply(partGrads,function(x){seq(0,x)})))
t<-t[rowSums(t)>0&rowSums(t)<=grad,]
formset<- function(args ,vec){
res<-NULL
res<-args[vec==1]
if(any(vec>1)){
agt1<-args[vec>1]
ggt1<-vec[vec>1]
pre<-paste("I(",agt1,"^",ggt1,")",sep="")
res<-c(res,pre)
}
if(length(res)==1){
return(res)
}else{
res<-paste(res,collapse=":")
return(res)
}
}
require(rje)
fset<-powerSet(apply(t,1,function(x){formset(independents,x)}))
fset[[1]]<-NULL
forms<-lapply(fset,function(x){paste(dependent,"~",paste(x,collapse="+",sep=""))})
forms<-unlist(forms)
res <- sapply(forms,
function(f) {res<-checkcrossval(data, newdata,
slices=slices, random=random,
details, slices2)
mse<-res$avmse
return(mse)
}
)
newdata = NULL
res <- sapply(forms,
function(f) {res<-checkcrossval(data, newdata,
slices=slices, random=random,
details, slices2)
mse<-res$avmse
return(mse)
}
)
nrow(kaffee.main)
res <- sapply(forms,
function(f) {checkcrossval(data, newdata,
slices=slices, random=random,
details, slices2)
}
)
checkcrossval(data, newdata,
slices=slices, random=random,
details, slices2)
checkcrossval(data, newdata,
slices=slices)
checkcrossval(data)
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
debug(selectMod)
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
res<-checkcrossval(data=data, newdata=newdata,
slices=slices, random=random,
details, slices2)
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koeper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res[,with(res,order(crossvalidate mse))]
res[,order(crossvalidate mse)]
res[,order("crossvalidate mse")]
res[order("crossvalidate mse"),]
res[order(crossvalidate mse),]
res[order("crossvalidate mse"),]
res[order(formula),]
source('~/Workspace/SHK@FZI/selectMod.R')
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res
source('~/Workspace/SHK@FZI/selectMod.R')
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res
sort(res[,2])
sort(res)
res[,oder(2)]
res[,order(2)]
res[,order(1)]
res[,order(formula)]
res[,order("formula")]
res[order("formula"),]
res[order("formula")]
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res
source('~/Workspace/SHK@FZI/selectMod.R')
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res
res[,1]
res[1,]
?sort
source('~/Workspace/SHK@FZI/selectMod.R')
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res
as.data.frame(res)
res<-as.data.frame(res)
res[,order("crossvalidate mse")]
res[order("crossvalidate mse"),]
res[order(res$"crossvalidate mse"),]
source('~/Workspace/SHK@FZI/selectMod.R')
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res[order(res$"crossvalidate mse"),]
res[order(res[,crossvalidate mse]),]
res[crossvalidate mes]
res[,crossvalidate mes]
res[,"crossvalidate mes"]
res[,2]
res[order(res[,2]),]
res[order(res[,c("crossvalidate mse")]),]
source('~/Workspace/SHK@FZI/selectMod.R')
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res
res
source('~/Workspace/SHK@FZI/selectMod.R')
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res[order(res[,c("crossvalidate mse")]),]
res[order(res[,c("crossvalidate mse")]),]
source('~/Workspace/SHK@FZI/selectMod.R')
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res
source('~/Workspace/SHK@FZI/selectMod.R')
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=1, partGrad=c(1,1,1))
res
res<-selectMod(kaffee.main,Koerper~Mahlgrad+Mehlmenge+Nasspressen, grad=2, partGrad=c(1,1,1))
source('~/Workspace/SHK@FZI/selectMod.R')
res
res[,1]
res[1,]
res[2,]
res[3,]
exit
q()
